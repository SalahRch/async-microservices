services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper_new
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - cicd-net
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    networks:
      - cicd-net
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    depends_on:
      - kafka
    networks:
      - cicd-net
  mongo:
    image: mongo
    ports:
      - 27017:27017
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - cicd-net

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false
    networks:
      - cicd-net

  productpublisher:
    build: ./services/product-publisher
    container_name: productpublisher
    depends_on:
      - kafka
    ports:
      - "8484:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_MONGODB_USERNAME: "root"
      SPRING_DATA_MONGODB_PASSWORD: "example"
      SPRING_DATA_MONGODB_HOST: "mongo"
      SPRING_DATA_MONGODB_DATABASE: "product"
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: "admin"
      SPRING_DATA_MONGODB_PORT: "27017"
    networks:
        - cicd-net

  bookpersistence:
    build: ./services/inventory
    container_name: inventory
    depends_on:
      - kafka
      - mongo
    ports:
      - "8181:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_MONGODB_USERNAME: "root"
      SPRING_DATA_MONGODB_PASSWORD: "example"
      SPRING_DATA_MONGODB_HOST: "mongo"
      SPRING_DATA_MONGODB_DATABASE: "product"
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: "admin"
      SPRING_DATA_MONGODB_PORT: "27017"
    networks:
      - cicd-net

  categorypersistence:
    build: ./services/category
    container_name: category
    depends_on:
      - kafka
      - mongo
    ports:
      - "8282:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_MONGODB_USERNAME: "root"
      SPRING_DATA_MONGODB_PASSWORD: "example"
      SPRING_DATA_MONGODB_HOST: "mongo"
      SPRING_DATA_MONGODB_DATABASE: "product"
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: "admin"
      SPRING_DATA_MONGODB_PORT: "27017"
    networks:
      - cicd-net



  notifications:
    build: ./services/notifications
    container_name: notifications
    depends_on:
      - kafka
    ports:
      - "8383:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATA_MONGODB_USERNAME: "root"
      SPRING_DATA_MONGODB_PASSWORD: "example"
      SPRING_DATA_MONGODB_HOST: "mongo"
      SPRING_DATA_MONGODB_DATABASE: "product"
      SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE: "admin"
      SPRING_DATA_MONGODB_PORT: "27017"
    networks:
        - cicd-net


networks:
  cicd-net:
    driver: bridge

volumes:
  mongo: